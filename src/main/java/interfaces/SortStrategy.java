package interfaces;

import java.util.Comparator;
import java.util.List;

/**
 * Интерфейс стратегии сортировки. Реализует паттерн Стратегия.
 * Определяет контракт для различных алгоритмов сортировки.
 * Позволяет легко заменять алгоритмы сортировки без изменения клиентского кода.
 *
 * @param <T> тип сортируемых объектов
 */
public interface SortStrategy<T> {

    /**
     * Выполняет сортировку списка по заданному алгоритму.
     * Реализующие классы должны гарантировать, что после выполнения метода
     * список будет отсортирован в соответствии с порядком, заданным компаратором.
     *
     * @param list список для сортировки (не должен быть null)
     * @param comparator компаратор, определяющий порядок сортировки (не должен быть null)
     * @throws IllegalArgumentException если list или comparator null
     */
    void sort(List<T> list, Comparator<T> comparator);
}
